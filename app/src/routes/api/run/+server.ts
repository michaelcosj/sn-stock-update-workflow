import { store } from "$lib/store";
import { getStockLevelDataFromEmail } from "$lib/workflow/gmail";
import { processStockLevelData } from "$lib/workflow/model";
import { sendDataAsSlackMessage } from "$lib/workflow/slack";
import { error, json } from "@sveltejs/kit";
import type { RequestHandler } from "./$types";

export const POST: RequestHandler = async ({ platform, request }) => {
	if (!platform) {
		error(500, "no platform for worker kv");
	}

	// check request is from our worker
	const authHeader = request.headers.get("Authorization");
	if (
		!authHeader ||
		authHeader?.split(" ").pop() !== platform.env.CRON_SECRET
	) {
		error(401, "You shall not pass!");
	}

	const data = await getStockLevelDataFromEmail();
	if (!data) {
		error(404, "Stock level data from email not found");
	}

	try {
		const output = await processStockLevelData(data.csv);
		if (!output) {
			return json({
				status: "success",
				message: "no ouput generated by model",
			});
		}

		console.log(
			"Sending model output to slack:",
			JSON.stringify(output, null, 2),
		);

		await sendDataAsSlackMessage(output, data.attachment.subject);
		await store.appendToHistory(platform, {
			output,
			attachment: data.attachment,
		});
	} catch (err) {
		console.error("An error occured", err);
		error(500, "An error occured");
	}

	return json({ status: "success" });
};
